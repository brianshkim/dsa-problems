Write a function minChange that takes in an amount and an array of coins. The function should return the minimum number of coins required to create the amount. You may use each coin as many times as necessary.

If it is not possible to create the amount, then return -1.

naive solution:
const minChange = (amount, coins) => {
  // todoconst sumPossible = (amount, coins) => {
  // todo
  
  if (amount === 0){
    return 0
  }

 

  let sum = amount;
  let min = Infinity
  let count = 0
  
  
 
  for (let i =0;i<coins.length;i++){
    
     count++
   
    
    sum-=coins[i]
      
    
    
    let sumholder = sum
    let countholder = count
    
    for(let j = 0;j<coins.length;j++){
      
      
      
      count++
      sumholder -= coins[j]
      
      if(sumholder===0){
        
        
        
        min = Math.min( min, count)
       
        
      }  
      else if(sumholder <0){
        sumholder=sum
        count=countholder
      }
      else if(sumholder%coins[j]===0) {
        
       j--
      }
      else {
        sumholder+=coins[j]
        count--
      }
     
      
    }
    
    
  
   if (sum-coins[i] > 0){
      i--
    }
    else if (sum-coins[i] < 0){
      sum = amount
      count = 0;
    }
  
  else if(sum-coins[i]===0){
    count++
      min = Math.min(min, count)
    sum = amount
      count = 0;
    
      
    }
  }
  
  
  return min===Infinity?-1: min
    
  

};
