def bellman_ford(graph, src, dest):
    distances = {}
    for node in graph:
        if node == src:
            distances[node] = 0
        else:
            distances[node] = float("inf")

    for _ in range(len(graph)):
        for node1 in graph:
            for node2 in graph[node1]:
                weight = graph[node1][node2]
                if (
                    distances[node1] != float("inf")
                    and distances[node1] + weight < distances[node2]
                ):
                    distances[node2] = distances[node1] + weight

    for node1 in graph:
        for node2 in graph[node1]:
            weight = graph[node1][node2]
            if (
                distances[node1] != float("inf")
                and distances[node1] + weight < distances[node2]
            ):
                raise Exception("Negative cycle detected!")

    return distances[dest]
